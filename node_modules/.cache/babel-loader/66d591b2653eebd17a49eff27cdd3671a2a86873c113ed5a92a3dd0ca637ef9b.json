{"ast":null,"code":"var _jsxFileName = \"/Users/saken/Desktop/react-course/kinopoisk/src/components/Movie/MovieList.tsx\";\nimport React from 'react';\nimport { MovieCard } from './MovieCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MovieList = ({\n  isEnabled,\n  query\n}) => {\n  const {\n    data,\n    status,\n    error\n  } = query;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isEnabled && status === \"pending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 45\n    }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }, this), status === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: data === null || data === void 0 ? void 0 : data.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.imbdId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","MovieCard","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","isEnabled","query","data","status","error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","map","movie","imbdId","_c","$RefreshReg$"],"sources":["/Users/saken/Desktop/react-course/kinopoisk/src/components/Movie/MovieList.tsx"],"sourcesContent":["import { TMovie } from '../../models/Movie';\nimport { UseQueryResult } from '@tanstack/react-query';\nimport React from 'react'\nimport { MovieCard } from './MovieCard';\n\ntype MovieListProps = {\n  isEnabled: boolean;\n  query: UseQueryResult<TMovie[], Error>;\n}\n\nexport const MovieList: React.FC<MovieListProps> = ({ isEnabled, query }) => {\n  const { data, status, error } = query;\n  return (\n    <>\n      {isEnabled && status === \"pending\" && <div>Loading...</div>}\n      {status === \"error\" && <div>Error: {error.message}</div>}\n      {status === \"success\" && (\n        <div className='mt-4'>\n          {data?.map((movie) => (\n            <MovieCard key={movie.imbdId} movie={movie} />\n          ))}\n        </div>\n      )}\n    </>\n  )\n}"],"mappings":";AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOxC,OAAO,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAC3E,MAAM;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGH,KAAK;EACrC,oBACEL,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGL,SAAS,IAAIG,MAAM,KAAK,SAAS,iBAAIP,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1DN,MAAM,KAAK,OAAO,iBAAIP,OAAA;MAAAS,QAAA,GAAK,SAAO,EAACD,KAAK,CAACM,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACvDN,MAAM,KAAK,SAAS,iBACnBP,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAN,QAAA,EAClBH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,GAAG,CAAEC,KAAK,iBACfjB,OAAA,CAACF,SAAS;QAAoBmB,KAAK,EAAEA;MAAM,GAA3BA,KAAK,CAACC,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAAAM,EAAA,GAfYhB,SAAmC;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}